[{"D:\\react\\management\\client\\src\\index.js":"1","D:\\react\\management\\client\\src\\App.js":"2","D:\\react\\management\\client\\src\\reportWebVitals.js":"3","D:\\react\\management\\client\\src\\components\\Customer.js":"4","D:\\react\\management\\client\\src\\components\\CustomerAdd.js":"5","D:\\react\\management\\client\\src\\components\\CustomerDelete.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":3159,"mtime":1611158235258,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":731,"mtime":1611158159974,"results":"11","hashOfConfig":"8"},{"size":4724,"mtime":1611161245394,"results":"12","hashOfConfig":"8"},{"size":1883,"mtime":1611161945313,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1yd93et",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\management\\client\\src\\index.js",[],["29","30"],"D:\\react\\management\\client\\src\\App.js",[],"D:\\react\\management\\client\\src\\reportWebVitals.js",[],"D:\\react\\management\\client\\src\\components\\Customer.js",["31"],"import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport CustomerDelete from './CustomerDelete';\r\n\r\nclass Customer extends React.Component {\r\n    render() {\r\n        return(       \r\n            <TableRow>\r\n                <TableCell>{this.props.id}</TableCell>\r\n                <TableCell>{this.props.name}</TableCell>\r\n                <TableCell><img src={this.props.image} /></TableCell>\r\n                <TableCell>{this.props.birthday}</TableCell>\r\n                <TableCell><CustomerDelete stateRefresh={this.props.stateRefresh} id={this.props.id} /></TableCell>\r\n            </TableRow>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Customer;","D:\\react\\management\\client\\src\\components\\CustomerAdd.js",["32"],"import React from 'react';\r\nimport { post } from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogAction from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n        display: 'none'\r\n    }\r\n\r\n});\r\n\r\nclass CustomerAdd extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            userName: '',\r\n            birthday: '',\r\n            fileName: '',\r\n            open: false\r\n        }\r\n    }\r\n\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.addCustomer()\r\n            .then((response) => {\r\n                console.log(response.data);                \r\n                this.props.stateRefresh();\r\n            })\r\n        this.setState({\r\n            file: null,\r\n            userName: '',\r\n            birthday: '',\r\n            fileName: '',\r\n            open: false\r\n        });\r\n        // window.location.reload();\r\n    }\r\n\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files[0],\r\n            fileName: e.target.Value\r\n        })\r\n    }\r\n\r\n    handleValueChange = (e) => {\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n    }\r\n\r\n    addCustomer = () => {\r\n        const url = '/api/customers';\r\n        const formData = new FormData();\r\n        formData.append('image', this.state.file);\r\n        formData.append('name', this.state.userName);\r\n        formData.append('birthday', this.state.birthday);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        }\r\n        return post(url, formData, config);        \r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            file: null,\r\n            userName: '',\r\n            birthday: '',\r\n            fileName: '',\r\n            open: false\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>고객 추가하기</Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose}>\r\n                    <DialogTitle>고객추가</DialogTitle>\r\n                    <DialogContent>\r\n                    <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type='file' file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} /><br/>\r\n                    <label htmlFor=\"raised-button-file\">\r\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\" name=\"file\">\r\n                            {this.state.fileName === \"\" ? \"프로필이미지\" : this.state.fileName}\r\n                        </Button>\r\n                    </label><br/>\r\n                    <TextField label=\"이름\" type='text' name='userName' value={this.state.userName} onChange={this.handleValueChange} /><br/>\r\n                    <TextField label=\"생일\" type='text' name='birthday' value={this.state.birthday} onChange={this.handleValueChange} /><br/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n                    \r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            // <form onSubmit={this.handleFormSubmit}>\r\n            //     <h1>고객 추가</h1>\r\n            //     프로필 이미지: <input type='file' name='file' file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} /><br/>\r\n            //     이름: <input type='text' name='userName' value={this.state.userName} onChange={this.handleValueChange} /><br/>\r\n            //     생일: <input type='text' name='birthday' value={this.state.birthday} onChange={this.handleValueChange} /><br/>\r\n            //     <button type='submit'>추가</button>\r\n            // </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CustomerAdd);\r\n\r\n","D:\\react\\management\\client\\src\\components\\CustomerDelete.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":12,"column":28,"nodeType":"39","endLine":12,"endColumn":58},{"ruleId":"40","severity":1,"message":"41","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":20},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'DialogAction' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]